#!/bin/bash


################################################################################
#                                         
# |              |    |         |         
# |---.,---.,---.|---.|    ,---.|--- ,---.
# |   |,---|`---.|   ||    |---'|    `---.
# `---'`---^`---'`   '`---'`---'`---'`---'
#
#                                        
# Bashlets -- A modular extensible toolbox for Bash
#
# Copyright (c) 2014-8 Roberto Reale
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################


source bashlets rdbms::oracle::query


#@public
function bashlets::rdbms::oracle::database::get_instance_name()
{
	local query="SELECT SYS_CONTEXT('userenv', 'instance_name') FROM dual"

    $BASHLETS_NAMESPACE query execute "$query"
}

#@public
function bashlets::rdbms::oracle::database::get_instance_number()
{
    local query instance_name

	instance_name="$(bashlets::rdbms::oracle::database::get_instance_name)"

	query="
        SELECT     TRIM(instance_number)
            FROM   gv\$instance
            WHERE UPPER(instance_name) = UPPER('$instance_name')
    "

    $BASHLETS_NAMESPACE query execute "$query"
}

#@public
function bashlets::rdbms::oracle::database::get_dbid()
{
    local query="SELECT DISTINCT dbid FROM v\$database"
	$BASHLETS_NAMESPACE query execute "$query"
}

#@public
function bashlets::rdbms::oracle::database::is_primary()
{
    local query role
    
    query="SELECT database_role FROM v\$database"
    role="$($BASHLETS_NAMESPACE query execute "$query")"
    [[ "$role" == "PRIMARY" ]]
}

#@public
function bashlets::rdbms::oracle::database::is_physical_standby()
{
    local query role
    
    query="SELECT database_role FROM v\$database"
    role="$($BASHLETS_NAMESPACE query execute "$query")"
    [[ "$role" == "PHYSICAL STANDBY" ]]
}

#@public
function bashlets::rdbms::oracle::database::is_logical_standby()
{
    local query role
    
    query="SELECT database_role FROM v\$database"
    role="$($BASHLETS_NAMESPACE query execute "$query")"
    [[ "$role" == "LOGICAL STANDBY" ]]
}

#@public
function bashlets::rdbms::oracle::database::is_standby()
{
       bashlets::rdbms::oracle::database::is_physical_standby  \
    || bashlets::rdbms::oracle::database::is_logical_standby
}

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
